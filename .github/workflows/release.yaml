name: Build and release
on: push
jobs:
  # minimal:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: nixbuild/nix-quick-install-action@v5
  #     - run: nix-build --version


  flakes-simple:
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: nixbuild/nix-quick-install-action@v24
        with:
          nix_version: "2.16.1"
          # nix_conf: features = nix-command
      - uses: cachix/cachix-action@v10
        with:
          name: anka-213
          # # If you chose signing key for write access
          # signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'
          # If you chose API tokens for write access OR if you have a private cache
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      # - uses: haskell/actions/setup@v1
      #   with:
      #     ghc-version: '8.8.4' # Exact version of ghc to use
      #     # cabal-version: 'latest'. Omitted, but defaults to 'latest'
      #     enable-stack: true
      #     stack-version: '2.7.1'
      # - name: nix-build --dry-run
      #   run: nix build -L -f . exe --dry-run
      - run: nix build --version
      - name: nix-build
        run: nix build -L -f . exe --extra-experimental-features nix-command
      - name: Make bundle
        run: nix bundle -f . exe --extra-experimental-features 'nix-command flakes' -o result-lsp-bundle
        if: ${{ matrix.os == 'ubuntu-latest' }}
      - uses: actions/upload-artifact@v2
        with:
          name: gf-lsp-${{ matrix.os }}
          path: |
            result/bin/gf-lsp
            result-lsp-bundle

  make-release:
    runs-on: ubuntu-latest
    needs: flakes-simple
    steps:
      - uses: actions/download-artifact@v2
      - run: ls -lR
      - run: |
          mv gf-lsp-macos-latest/result/bin/gf-lsp gf-lsp-macos
          mv gf-lsp-ubuntu-latest/result/bin/gf-lsp gf-lsp-ubuntu
          mv gf-lsp-ubuntu-latest/result-lsp-bundle gf-lsp-ubuntu-bundle

      - name: Release
        uses: softprops/action-gh-release@v0.1.15
        # if: startsWith(github.ref, 'refs/tags/')
        with:
          prerelease: true
          tag_name: prerelease
          draft: true
          name: Experiment with using releases
          body: |
            Try downloading the server for your OS and see if it works
          files: |
            gf-lsp-macos
            gf-lsp-ubuntu
            gf-lsp-ubuntu-bundle
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # GITHUB_REPOSITORY: ${{ GITHUB_REPOSITORY }}
