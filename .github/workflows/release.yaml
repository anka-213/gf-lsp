name: Build and release
on: push
jobs:
  # minimal:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: nixbuild/nix-quick-install-action@v5
  #     - run: nix-build --version


  flakes-simple:
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: nixbuild/nix-quick-install-action@v24
        with:
          nix_version: "2.16.1"
          # nix_conf: features = nix-command
      - uses: cachix/cachix-action@v10
        with:
          name: anka-213
          # # If you chose signing key for write access
          # signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'
          # If you chose API tokens for write access OR if you have a private cache
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      # - uses: haskell/actions/setup@v1
      #   with:
      #     ghc-version: '8.8.4' # Exact version of ghc to use
      #     # cabal-version: 'latest'. Omitted, but defaults to 'latest'
      #     enable-stack: true
      #     stack-version: '2.7.1'
      # - name: nix-build --dry-run
      #   run: nix build -L -f . exe --dry-run
      - run: nix build --version
      - name: nix-build
        run: nix build -L -f . exe --extra-experimental-features nix-command
        # Don't build the non-static version on macos
        if: ${{ matrix.os == 'ubuntu-latest' }}
      - name: Build redistributable for MacOS
        run: nix build -L -f . gf-lsp-redistributable --extra-experimental-features nix-command -o result-redistributable
        if: ${{ matrix.os == 'macos-latest' }}
      - name: Make bundle for linux
        run: nix bundle -f . exe --extra-experimental-features 'nix-command flakes' -o result-lsp-bundle
        if: ${{ matrix.os == 'ubuntu-latest' }}
      - uses: actions/upload-artifact@v2
        with:
          name: gf-lsp-${{ matrix.os }}
            # result/bin/gf-lsp
          path: |
            result-redistributable/bin/gf-lsp
            result-lsp-bundle

  make-release:
    runs-on: ubuntu-latest
    needs: flakes-simple
    if: github.ref == 'refs/heads/main'
    # if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/download-artifact@v2
      - run: ls -lR
      - name: Create gz archives
        run: |
          # ${GITHUB_REF##*/}
          mv gf-lsp-macos-latest/result-redistributable/bin/gf-lsp gf-lsp-${GITHUB_REF##*/}-MacOS-x64
          mv gf-lsp-ubuntu-latest/result-lsp-bundle gf-lsp-${GITHUB_REF##*/}-Linux-x64
          # gf-lsp-${GITHUB_REF##*/}-MacOS-x64
          # mv gf-lsp-macos-latest/result-redistributable/bin/gf-lsp gf-lsp-macos-latest/gf-lsp
          # mv gf-lsp-ubuntu-latest/result-lsp-bundle gf-lsp-ubuntu-latest/gf-lsp
          # chmod +x gf-lsp-macos-latest/gf-lsp
          # chmod +x gf-lsp-ubuntu-latest/gf-lsp
          # chmod +x gf-lsp-${GITHUB_REF##*/}-MacOS-x64
          # chmod +x gf-lsp-${GITHUB_REF##*/}-Linux-x64
          # tar caf gf-lsp-MacOS-x64.tar.gz gf-lsp-${GITHUB_REF##*/}-MacOS-x64
          # tar caf gf-lsp-Linux-x64.tar.gz gf-lsp-${GITHUB_REF##*/}-Linux-x64
          gzip -c gf-lsp-${GITHUB_REF##*/}-MacOS-x64 > gf-lsp-MacOS-x64.gz
          gzip -c gf-lsp-${GITHUB_REF##*/}-Linux-x64 > gf-lsp-Linux-x64.gz

      - name: Release
        uses: softprops/action-gh-release@v0.1.15
        # if: startsWith(github.ref, 'refs/tags/')
        with:
          prerelease: true
          tag_name: prerelease
          draft: true
          # name: Version ${github.ref}
          body: |
            # Installation
            If you're running linux or an intel mac you can:
              - Download the `gf-lsp-Linux-x64` or `gf-lsp-MacOS-x64` respectively
              - Rename it to `gf-lsp`: `mv gf-lsp-linux-bundle gf-lsp` or `mv gf-lsp-macos-intel gf-lsp`
              - make it executable using `chmod +x gf-lsp`
              - On macos you need to trust it with: `xattr -dr com.apple.quarantine ./gf-lsp`
              - and put it in one of the directories in your `$PATH`

              after that reload your editor to make the lsp extension find the executable.

              If you are on a M1 or M2 silicon mac, follow the [instructions in the readme](https://github.com/anka-213/gf-vscode/blob/main/README.md#nix-mac-or-linux) for using nix
            # Changelog
          files: |
            *.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # GITHUB_REPOSITORY: ${{ GITHUB_REPOSITORY }}
